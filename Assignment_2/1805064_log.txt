Line no 1: TOKEN <INT> Lexeme int found

Line no 1: TOKEN <ID> Lexeme main found

ScopeTable # 1
5 --> < main : ID > 

Line no 1: TOKEN <LPAREN> Lexeme ( found

Line no 1: TOKEN <RPAREN> Lexeme ) found

Line no 1: TOKEN <LCURL> Lexeme { found

Line no 2: TOKEN <INT> Lexeme int found

Line no 2: TOKEN <ID> Lexeme a found

ScopeTable # 1.1
6 --> < a : ID > 

ScopeTable # 1
5 --> < main : ID > 

Line no 2: TOKEN <COMMA> Lexeme , found

Line no 2: TOKEN <ID> Lexeme b found

ScopeTable # 1.1
0 --> < b : ID > 
6 --> < a : ID > 

ScopeTable # 1
5 --> < main : ID > 

Line no 2: TOKEN <SEMICOLON> Lexeme ; found

Line no 3: TOKEN <ID> Lexeme a found

a already exists in current ScopeTable

Line no 3: TOKEN <ASSIGNOP> Lexeme = found

Line no 3: TOKEN <ID> Lexeme a found

a already exists in current ScopeTable

Line no 3: TOKEN <ADDOP> Lexeme + found

Line no 3: TOKEN <CONST_INT> Lexeme 1 found

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
6 --> < a : ID > 

ScopeTable # 1
5 --> < main : ID > 

Line no 3: TOKEN <SEMICOLON> Lexeme ; found

Line no 4: TOKEN <CHAR> Lexeme char found

Line no 4: TOKEN <ID> Lexeme ch found

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > 
6 --> < a : ID > 

ScopeTable # 1
5 --> < main : ID > 

Line no 4: TOKEN <ASSIGNOP> Lexeme = found

Line no 4: TOKEN <CONST_CHAR> Lexeme 'a' found --> <CHAR_CONST, a>

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > 
4 --> < 'a' : CONST_CHAR > 
6 --> < a : ID > 

ScopeTable # 1
5 --> < main : ID > 

Line no 4: TOKEN <SEMICOLON> Lexeme ; found

Line no 5: TOKEN <ID> Lexeme ch found

ch already exists in current ScopeTable

Line no 5: TOKEN <ASSIGNOP> Lexeme = found

Line no 5: TOKEN <CONST_CHAR> Lexeme '\t' found --> <CHAR_CONST, 	>

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > 
4 --> < 'a' : CONST_CHAR > 
6 --> < a : ID > < '\t' : CONST_CHAR > 

ScopeTable # 1
5 --> < main : ID > 

Line no 5: TOKEN <SEMICOLON> Lexeme ; found

Line no 6: TOKEN <CHAR> Lexeme char found

Line no 6: TOKEN <ID> Lexeme c found

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > < c : ID > 
4 --> < 'a' : CONST_CHAR > 
6 --> < a : ID > < '\t' : CONST_CHAR > 

ScopeTable # 1
5 --> < main : ID > 

Line no 6: TOKEN <LTHRID> Lexeme [ found

Line no 6: TOKEN <RTHRID> Lexeme ] found

Line no 6: TOKEN <ASSIGNOP> Lexeme = found

Line no 6: Token <STRING> Lexeme "ab\td" found --> <STRING, "ab	d"> 

Line no 6: TOKEN <SEMICOLON> Lexeme ; found

Line no 7: TOKEN <ID> Lexeme printf found

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > < c : ID > < printf : ID > 
4 --> < 'a' : CONST_CHAR > 
6 --> < a : ID > < '\t' : CONST_CHAR > 

ScopeTable # 1
5 --> < main : ID > 

Line no 7: TOKEN <LPAREN> Lexeme ( found

Line no 7: Token <STRING> Lexeme "abc\
def\
ghi" found --> <STRING, "abcdefghi"> 

Line no 9: TOKEN <RPAREN> Lexeme ) found

Line no 9: TOKEN <SEMICOLON> Lexeme ; found

Line no 10: Token <COMMENT> Lexeme // a comment found 

Line no 11: Token <COMMENT> Lexeme /** another
*** comment ***/ found 

Line no 13: TOKEN <RETURN> Lexeme return found

Line no 13: TOKEN <CONST_INT> Lexeme 0 found

ScopeTable # 1.1
0 --> < b : ID > < 1 : CONST_INT > 
1 --> < ch : ID > < c : ID > < printf : ID > 
4 --> < 'a' : CONST_CHAR > 
6 --> < a : ID > < '\t' : CONST_CHAR > < 0 : CONST_INT > 

ScopeTable # 1
5 --> < main : ID > 

Line no 13: TOKEN <SEMICOLON> Lexeme ; found

Line no 14: TOKEN <RCURL> Lexeme } found

ScopeTable # 1
5 --> < main : ID > 

Total lines: 14
Total errors: 0